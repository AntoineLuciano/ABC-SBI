"""
Simulation module for ABC sampling.

This module provides the core ABC simulation functionality including:
- ABCSimulator: Main class for ABC data generation
- RejectionSampler: ABC rejection sampling implementation
- Result structures for ABC operations
- Utility functions for configuration management

Example:
    from abcnre.simulation import ABCSimulator
    from abcnre.simulation.models import GaussGaussModel
    
    # Create simulator
    model = GaussGaussModel(mu0=0.0, sigma0=2.0, sigma=0.5)
    simulator = ABCSimulator(model, observed_data=data, epsilon=0.1)
    
    # Generate samples
    samples = simulator.generate_samples(n_samples=1000)
"""

from .simulator import ABCSimulator
from .sampler import RejectionSampler, BaseSampler
from .base import (
    ABCSampleResult,
    ABCTrainingResult, 
    ABCSingleResult
)
from .utils import (
    save_generator_config,
    load_generator_config,
    import_class_from_string
)

__all__ = [
    # Main classes
    "ABCSimulator",
    "RejectionSampler", 
    "BaseSampler",
    
    # Result structures
    "ABCSampleResult",
    "ABCTrainingResult", 
    "ABCSingleResult",
    
    # Utilities
    "save_generator_config",
    "load_generator_config",
    "import_class_from_string"
]